$mobile-max-width: 40.5624rem;  // 649px when 1rem is 16px

.homepage-frame {
    height: 100%;
    width: 100%;

    display: grid;
    grid-template-areas:
        "menu title"
        "menu image"
        "menu text"
    ;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: min-content min-content 1fr;
}

.homepage-title {
    grid-area: title;

    text-align: center;

    padding-left: 1.5rem;
    padding-right: 1.5rem;

    // Default font size is 3rem (set in generics.scss).
    //@media (max-width: 81.25rem) { // 1300px when 1rem is 16px
    //    font-size: 2.9rem;
    //}

    // TODO: next thing should be variable-ized?
    @media (max-width: 56.25rem) {  // 900px when 1rem is 16px
        font-size: calc(1em + 4vw);
    }

    @media (max-width: $mobile-max-width) {
        margin: .5em;
    }
}



.homepage-menu {
    grid-area: menu;

    list-style: none;
    margin: 0;
    padding: 0 var(--std-space);

    display: flex;
    justify-content: space-between;
    align-items: stretch;
}

.homepage-menu-item {
    flex-grow: 1;
    font-size: 5vw;
    min-width: 5vw;
}
.homepage-menu-item + .homepage-menu-item {
    margin-left: var(--std-space);
}
.homepage-menu-item a {
    height: 100%;
    width: 100%;

    display: flex;
    justify-content: center;
    align-items: center;
}
.homepage-menu-item a:hover, .homepage-menu-item a:focus {
    text-decoration: underline;
}


.rotated-text {
    text-decoration: inherit;
}
@media (min-width: $mobile-max-width) {
    .rotated-text {
        position: absolute;
        transform: rotate(-.25turn);
        transform-origin: center;
    }
}


//.homepage-about {
//    //--homepage-about-padding: $std-space;
//    //
//    //height: 100%;
//    //overflow-y: auto;
//    //padding: $std-space 0;
//    //
//    //display: flex;
//    //flex-direction: column;
//    //align-items: center;
//    //justify-content: center;
//}
// TODO: probably delete this?
//@media (max-width: $mobile-max-width) {
//    .homepage-about {
//        padding-bottom: calc(var(--homepage-about-padding) * 2);
//    }
//
//    .homepage-about p {
//        margin-left: var(--homepage-about-padding);
//        margin-right: var(--homepage-about-padding);
//    }
//}


.homepage-text-section {
    grid-area: text;

    padding: 0 var(--std-space) var(--std-space) var(--std-space);
}
//.homepage-text-section p:first-child {
//    margin-top: 0;
//}
.homepage-text-section .line-block {
    // NB: The .line-block class is provided by Pelican when you specify
    //     line breaks for some text.
    margin-bottom: var(--std-space);
}


.homepage-image-section {
    grid-area: image;

    height: 100%;
    //padding: var(--std-space) 0;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}



.homepage-figure {
    // TODO: probably don't need this width?!
    //width: 80%;

    //// TODO: do we need this margin un-set?
    @media (max-width: $mobile-max-width) {
        margin-bottom: 0;
        margin-top: 0;
    }

    img {
        width: 100%;
    }
}
